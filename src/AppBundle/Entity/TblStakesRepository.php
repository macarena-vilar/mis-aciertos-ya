<?php

namespace AppBundle\Entity;

use \AppBundle\Util\GameFactory;

/**
 * TblStakesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TblStakesRepository extends \Doctrine\ORM\EntityRepository
{
  public function getStakes() {
    $retVal = [];
    foreach ( GameFactory::getGameList() as $game ) {
      $gameObj = new $game;
      $gameId = $gameObj->getGameId();
      $retVal[$gameId] = $this->getGameStakes($gameId);
    }
    return $retVal;
  }  

  public function getGameStakes($gameId) {
      $query = $this->getEntityManager()
                    ->createQuery (
                          "select s
                             from AppBundle:TblStakes s
                            where s.gameid = :gameid" )
                    ->setParameter ( "gameid", $gameId );
      try  {
      	$data = $query->getSingleResult();
        return json_decode($data->getStakes());
      } catch (\Exception $ex) {
      	return null;
      }
  }

  public function loadStakesFromWS($gameId) {
    // Forced!
    if ( $gameId == "P" )
      return;

    if ( $gameId == "S" )
      $gameName = "SUPERLOTTO";
    else
      $gameName = "ELEGIDOS";

    global $kernel;
    if($kernel instanceOf \AppCache) 
      $kernel = $kernel->getKernel();
    $restClient = $kernel->getContainer()->get('ci.restclient');

    $headers = [CURLOPT_HTTPHEADER => $kernel->getContainer()->getParameter("rest.headers")];
    $url = $kernel->getContainer()->getParameter("gameRules.rest.url") . "/" . $gameName;

    $data =  json_decode($restClient->get($url,$headers)->getContent());
    $stakes = json_encode($data->stakes);

    $query = $this->getEntityManager()
                  ->createQuery (
                        "select s
                           from AppBundle:TblStakes s
                          where s.gameid = :gameid" )
                  ->setParameter ( "gameid", $gameId );
    try  {
      $rec = $query->getSingleResult();
    } catch (\Exception $ex) {
      $rec = new TblStakes();
      $rec->setGameid($gameId);
    }
    $rec->setStakes($stakes);
    $this->getEntityManager()->persist($rec);
    $this->getEntityManager()->flush();

  }
}
